name: CI
on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++,clang++]
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - uses: actions/checkout@v3
      - name: Add ./bin to PATH
        run: echo "bin" >> $GITHUB_PATH
      - name: Install Dependencies
        uses: ./.github/actions/setup-deps
      - name: Build
        run: |
          bin/bootstrap/Linux-${{ matrix.compiler }}.release-x86_64
          bin/ai
      - name: Archive build
        run: tar -czf temp/build-artifact.tar.gz build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.os }}-${{ matrix.compiler }}
          path: temp/build-artifact.tar.gz

  test:
    name: Run atf_ci ${{ matrix.job }} on ${{ matrix.os }}-${{ matrix.compiler }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++,clang++]
        job: [normalize, comp, memcheck]

    steps:
      - uses: actions/checkout@v3
      - name: Add ./bin to PATH
        run: echo "bin" >> $GITHUB_PATH
      - name: Install Dependencies
        uses: ./.github/actions/setup-deps
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-${{ matrix.os }}-${{ matrix.compiler }}
          path: temp/
      - name: Extract build output
        run: tar -xzf temp/build-artifact.tar.gz
      - name: Run atf_ci
        run: |
          git config --global --add safe.directory $HOME/work/openacr/openacr
          git config --global user.email root@localhost
          git config --global user.name runner
          atf_ci -cijob:${{ matrix.job }}
