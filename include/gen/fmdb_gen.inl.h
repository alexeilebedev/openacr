//
// include/gen/fmdb_gen.inl.h
// Generated by AMC
//
// (C) AlgoEngineering LLC 2008-2013
// (C) NYSE | Intercontinental Exchange 2013-2016
//


#pragma once
#include "include/gen/algo_gen.inl.h"
#include "include/gen/fm_gen.inl.h"
//#pragma endinclude
inline fmdb::Alarm::Alarm() {
    fmdb::Alarm_Init(*this);
}

inline fmdb::AlmCode::AlmCode() {
}

inline fmdb::AlmObjtype::AlmObjtype() {
}

inline fmdb::AlmSource::AlmSource() {
}

inline fmdb::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline fmdb::FieldId::FieldId(fmdb_FieldIdEnum arg) { this->value = i32(arg); }
inline fmdb::FieldId::FieldId() {
    fmdb::FieldId_Init(*this);
}


// --- fmdb.FieldId.value.GetEnum
// Get value of field as enum type
inline fmdb_FieldIdEnum fmdb::value_GetEnum(const fmdb::FieldId& parent) {
    return fmdb_FieldIdEnum(parent.value);
}

// --- fmdb.FieldId.value.SetEnum
// Set value of field from enum type.
inline void fmdb::value_SetEnum(fmdb::FieldId& parent, fmdb_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- fmdb.FieldId.value.Cast
inline fmdb::FieldId::operator fmdb_FieldIdEnum () const {
    return fmdb_FieldIdEnum((*this).value);
}

// --- fmdb.FieldId..Init
// Set all fields to initial values.
inline void fmdb::FieldId_Init(fmdb::FieldId& parent) {
    parent.value = i32(-1);
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const fmdb::Alarm &row) {// cfmt:fmdb.Alarm.String
    fmdb::Alarm_Print(const_cast<fmdb::Alarm&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const fmdb::AlmCode &row) {// cfmt:fmdb.AlmCode.String
    fmdb::AlmCode_Print(const_cast<fmdb::AlmCode&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const fmdb::AlmObjtype &row) {// cfmt:fmdb.AlmObjtype.String
    fmdb::AlmObjtype_Print(const_cast<fmdb::AlmObjtype&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const fmdb::AlmSource &row) {// cfmt:fmdb.AlmSource.String
    fmdb::AlmSource_Print(const_cast<fmdb::AlmSource&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const fmdb::FieldId &row) {// cfmt:fmdb.FieldId.String
    fmdb::FieldId_Print(const_cast<fmdb::FieldId&>(row), str);
    return str;
}
