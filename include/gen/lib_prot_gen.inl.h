//
// include/gen/lib_prot_gen.inl.h
// Generated by AMC
//
// Copyright (C) 2008-2013 AlgoEngineering LLC
// Copyright (C) 2013-2019 NYSE | Intercontinental Exchange
// Copyright (C) 2020-2023 Astra
// Copyright (C) 2023 AlgoRND
//


#pragma once
//#pragma endinclude
inline lib_prot::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline lib_prot::FieldId::FieldId(lib_prot_FieldIdEnum arg) { this->value = i32(arg); }
inline lib_prot::FieldId::FieldId() {
    lib_prot::FieldId_Init(*this);
}


// --- lib_prot.FieldId.value.GetEnum
// Get value of field as enum type
inline lib_prot_FieldIdEnum lib_prot::value_GetEnum(const lib_prot::FieldId& parent) {
    return lib_prot_FieldIdEnum(parent.value);
}

// --- lib_prot.FieldId.value.SetEnum
// Set value of field from enum type.
inline void lib_prot::value_SetEnum(lib_prot::FieldId& parent, lib_prot_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- lib_prot.FieldId.value.Cast
inline lib_prot::FieldId::operator lib_prot_FieldIdEnum () const {
    return lib_prot_FieldIdEnum((*this).value);
}

// --- lib_prot.FieldId..Init
// Set all fields to initial values.
inline void lib_prot::FieldId_Init(lib_prot::FieldId& parent) {
    parent.value = i32(-1);
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const lib_prot::FieldId &row) {// cfmt:lib_prot.FieldId.String
    lib_prot::FieldId_Print(const_cast<lib_prot::FieldId&>(row), str);
    return str;
}
