//
// include/gen/algo_pch_gen.inl.h
// Generated by AMC
//
// Copyright (C) 2008-2013 AlgoEngineering LLC
// Copyright (C) 2013-2019 NYSE | Intercontinental Exchange
// Copyright (C) 2020-2023 Astra
// Copyright (C) 2023 AlgoRND
//


#pragma once
//#pragma endinclude
inline algo_pch::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline algo_pch::FieldId::FieldId(algo_pch_FieldIdEnum arg) { this->value = i32(arg); }
inline algo_pch::FieldId::FieldId() {
    algo_pch::FieldId_Init(*this);
}


// --- algo_pch.FieldId.value.GetEnum
// Get value of field as enum type
inline algo_pch_FieldIdEnum algo_pch::value_GetEnum(const algo_pch::FieldId& parent) {
    return algo_pch_FieldIdEnum(parent.value);
}

// --- algo_pch.FieldId.value.SetEnum
// Set value of field from enum type.
inline void algo_pch::value_SetEnum(algo_pch::FieldId& parent, algo_pch_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- algo_pch.FieldId.value.Cast
inline algo_pch::FieldId::operator algo_pch_FieldIdEnum () const {
    return algo_pch_FieldIdEnum((*this).value);
}

// --- algo_pch.FieldId..Init
// Set all fields to initial values.
inline void algo_pch::FieldId_Init(algo_pch::FieldId& parent) {
    parent.value = i32(-1);
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const algo_pch::FieldId &row) {// cfmt:algo_pch.FieldId.String
    algo_pch::FieldId_Print(const_cast<algo_pch::FieldId&>(row), str);
    return str;
}
