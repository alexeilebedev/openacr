//
// include/gen/amsdb_gen.inl.h
// Generated by AMC
//
// (C) AlgoEngineering LLC 2008-2013
// (C) NYSE | Intercontinental Exchange 2013-2016
//


#pragma once
#include "include/gen/algo_gen.inl.h"
#include "include/gen/ams_gen.inl.h"
//#pragma endinclude
inline amsdb::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline amsdb::FieldId::FieldId(amsdb_FieldIdEnum arg) { this->value = i32(arg); }
inline amsdb::FieldId::FieldId() {
    amsdb::FieldId_Init(*this);
}


// --- amsdb.FieldId.value.GetEnum
// Get value of field as enum type
inline amsdb_FieldIdEnum amsdb::value_GetEnum(const amsdb::FieldId& parent) {
    return amsdb_FieldIdEnum(parent.value);
}

// --- amsdb.FieldId.value.SetEnum
// Set value of field from enum type.
inline void amsdb::value_SetEnum(amsdb::FieldId& parent, amsdb_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- amsdb.FieldId.value.Cast
inline amsdb::FieldId::operator amsdb_FieldIdEnum () const {
    return amsdb_FieldIdEnum((*this).value);
}

// --- amsdb.FieldId..Init
// Set all fields to initial values.
inline void amsdb::FieldId_Init(amsdb::FieldId& parent) {
    parent.value = i32(-1);
}
inline amsdb::ProcType::ProcType() {
    amsdb::ProcType_Init(*this);
}


// --- amsdb.ProcType..Init
// Set all fields to initial values.
inline void amsdb::ProcType_Init(amsdb::ProcType& parent) {
    parent.id = u32(0);
}
inline amsdb::StreamType::StreamType() {
}


inline algo::cstring &algo::operator <<(algo::cstring &str, const amsdb::FieldId &row) {// cfmt:amsdb.FieldId.String
    amsdb::FieldId_Print(const_cast<amsdb::FieldId&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const amsdb::ProcType &row) {// cfmt:amsdb.ProcType.String
    amsdb::ProcType_Print(const_cast<amsdb::ProcType&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const amsdb::StreamType &row) {// cfmt:amsdb.StreamType.String
    amsdb::StreamType_Print(const_cast<amsdb::StreamType&>(row), str);
    return str;
}
