bin/abt  -target:mdbg -cfg:debug
#mdbg mdbg
#Gdb script is shown below
# This file was generated by mdbg
file build/debug/mdbg
set args mdbg
start
set history filename temp/gdb.history
set history save on
set record instruction-history-size 1000000
set record function-call-history-size 100000
set record function-call-history 1000
set confirm off
handle SIGPIPE nostop
set pagination off
catch throw
break main
break algo::FatalErrorExit

mdbg.note  Debug script saved to temp/mdbg.el
mdbg.note  Invoking gdb under emacs. Make sure to link ~/.emacs -> conf/emacs.el, ~/elisp -> conf/elisp
mdbg.note  Standard shortcuts:
mdbg.note               F7  recompile and restart executable
mdbg.note              F11  step into
mdbg.note        Shift-F11  step out
mdbg.note              F10  step over
mdbg.note         Ctrl-F10  run to cursor
mdbg.note              F12  restore windows
mdbg.note              F9   set breakpoint
mdbg.note         Ctrl-F9   clear breakpoint
mdbg.note              F6   other window
mdbg.note    Alt-Up Arrow   Go up the call stack
mdbg.note  Alt-Down Arrow   Go down the call stack
# Emacs script is shown below
; 
; This file was generated by mdbg
(defun gdb-restore-windows-full () (interactive)
  (gdb-restore-windows)
  )
(defun gdb-send-input (string) (interactive)
  (let ((old-buffer (current-buffer)))
    (switch-to-buffer "*gud*")
    (insert string)
    (comint-send-input)
    (switch-to-buffer old-buffer)
    ))
(defun gdb-send-input-ui (string) (interactive)
  (gdb-restore-windows-full)
  (insert string)
  (comint-send-input)
  )
(defun gdb-remote-output (process output)
  (let ((old-buffer (current-buffer)))
    (switch-to-buffer "*gud*")
    (insert output)
    (comint-set-process-mark)
    (switch-to-buffer old-buffer)
    ))
(defun mdbg-recompile   () (interactive)
  (gdb-send-input-ui "!abt mdbg -cfg debug")
  (gdb-send-input-ui "run"))
(defun mdbg-step   () (interactive) (gdb-send-input-ui "step"))
(defun mdbg-next   () (interactive) (gdb-send-input-ui "next"))
(defun mdbg-finish () (interactive) (gdb-send-input-ui "finish"))
(defun mdbg-until  () (interactive) (gdb-send-input-ui "until"))
(defun mdbg-cont   () (interactive) (gdb-send-input-ui "cont"))
(defun mdbg-break  () (interactive) (gdb-send-input (concat "break " (buffer-name) ":" (number-to-string (line-number-at-pos)))))
(defun mdbg-clear  () (interactive) (gdb-send-input (concat "clear " (buffer-name) ":" (number-to-string (line-number-at-pos)))))
(defun mdbg-up     () (interactive) (gdb-send-input-ui "up"))
(defun mdbg-down   () (interactive) (gdb-send-input-ui "down"))
(global-set-key (kbd "<f7>")      'mdbg-recompile)   ; rebuild program being debugged
(global-set-key (kbd "<f11>")     'mdbg-step)   ;step into
(global-set-key (kbd "S-<f11>")   'mdbg-finish) ;step out of function
(global-set-key (kbd "<f10>")     'mdbg-next)   ;step over
(global-set-key (kbd "C-<f10>")   'mdbg-until)  ;go until current line
(global-set-key (kbd "<f5>")      'mdbg-cont) ;run
(global-set-key (kbd "<f9>")      'mdbg-break) ;set breakpoint
(global-set-key (kbd "C-<f9>")    'mdbg-clear) ;clear breakpoint
(global-set-key (kbd "M-<down>")  'mdbg-down)
(global-set-key (kbd "M-<up>")  'mdbg-up)
(global-set-key (kbd "<f6>")      'other-window)
(global-set-key (kbd "<f12>")     'gdb-restore-windows-full)

(gdb "gdb -i=mi --init-command=temp/mdbg.gdb")

