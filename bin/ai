#!/usr/bin/env perl
use strict;
use warnings;
sub Die {
    my ($file,$line) = (caller)[1,2];
    print "error $_[0]. more info in txt/abt-troubleshoot.md\n";
    exit(1);
}
my $clean = scalar(grep(/^-clean$/,@ARGV)) || system("abt --version >/dev/null 2>/dev/null")!=0;
@ARGV = grep(!/^-clean$/,@ARGV);
# check if abt exists
if ($clean) {
    print("# selecting bootstrap file...\n");
    system("bin/select-bootstrap")==0 or Die("bin/select-bootstrap: $?");
}
if (!-x "bin/src_hdr") {
    # build this other tool
    system("bin/abt", "-build", "src_hdr")==0 or Die("abt failed: $?");
}
my $F = shift @ARGV;
$F = "%" if !$F;
# calls src_func -updateproto
# allow this one to fail
system("bin/src_hdr", "-write");
# rebuild abt itself if needed
# this is temporary and is needed only while abt schema is in flux
system("bin/abt -install abt >/dev/null 2>&1");
# main build step
system("bin/abt", "-build", $F, @ARGV)==0 or Die("abt failed: $?");
